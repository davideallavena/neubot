<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"
    "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>

    <!-- Label to start/stop via launchctl(1) -->
    <key>Label</key>
    <string>org.neubot.updater.dload</string>

    <!-- Start the dload component of the updater.  The version
         number is automatically updated by the scripts/release.sh
         convenience script.  -->
    <key>ProgramArguments</key>
    <array>
      <string>/usr/bin/python</string>
      <string>/usr/local/share/neubot/0.004002999/updater/dload.py</string>
    </array>

    <!-- The dload component runs in the context of the unprivileged
         user and group ``_neubot_update``.  We also need to initialize
         the supplementary groups. -->
    <key>UserName</key>
    <string>_neubot_update</string>
    <key>GroupName</key>
    <string>_neubot_update</string>
    <key>InitGroups</key>
    <true/>

    <!-- Instruct launchd(8) to listen for incoming connections
         on a well-known UNIX domain socket address.  Please, note
         that launchd(8) will create the socket and setup the
         proper permissions.   Please, note that ``/var/run`` is
         part of the standard MacOSX hier(7). -->
    <key>Sockets</key>
    <dict>
      <key>Listeners</key>
      <dict>
        <key>SockPassive</key>
        <true/>
        <key>SockPathName</key>
        <string>/var/run/neubot-dload.sock</string>
      </dict>
    </dict>

    <!-- Instruct launchd(8) to accept() new connections on the
         well-known UNIX domain socket and pass the connected
         socket as the dload component stdin, stdout and stderr.
         In particular, the wait flag instructs launchd(8) to
         accept() on behalf of dload.py and pass it the connected
         socket instead of the listening socket. -->
    <key>inetdCompatibility</key>
    <dict>
      <key>Wait</key>
      <false/>
    </dict>

    <!-- The dload component is started on demand when someone
         connects to the well-know UNIX domain socket. -->
    <key>RunAtLoad</key>
    <false/>

  </dict>
</plist>
